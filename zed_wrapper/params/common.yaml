# config/common_yaml
# Common parameters to Stereolabs ZED and ZED mini cameras
#
# Note: the parameter svo_file is passed as exe argumet
---

/**:
    ros__parameters:
        general:
            # To load a SVO file add the parameter `svo_file` and set a valid path
            # Note: you cannot set `svo_file` with an empty string
            # svo_file: '/media/walter/Stereolabs-SSD/SVO/Stereolabs/sofa.svo'
            debug_mode:                 false
            camera_timeout_sec:         5
            camera_max_reconnect:       5
            camera_reactivate:          false                               # set to false if there is an external node manager that activates the camera after a correct configure
            camera_flip:                false
            zed_id:                     0
            serial_number:              0
            resolution:                 2                                   # '0': HD2K, '1': HD1080, '2': HD720, '3': VGA
            sdk_verbose:                true
            grab_frame_rate:            15
            pub_frame_rate:             15.0                                # Dynamic - frequency of publishing of video and depth data
            gpu_id:                     -1
            base_frame:                 'base_link'                         # must be equal to the frame_id used in the URDF file

        video:
            extrinsic_in_camera_frame:  false                               # if `false` extrinsic parameter in `camera_info` will use ROS native frame (X FORWARD, Z UP) instead of the camera frame (Z FORWARD, Y DOWN) [`true` use old behavior as for version < v3.1]
            img_downsample_factor:      1.0                                 # Dynamic - Resample factor for image data matrices [0.01,1.0] The SDK works with native data sizes, but publishes rescaled matrices
            brightness:                 4                                   # Dynamic
            contrast:                   4                                   # Dynamic
            hue:                        0                                   # Dynamic
            saturation:                 4                                   # Dynamic
            sharpness:                  4                                   # Dynamic
            gamma:                      8                                   # Dynamic - Requires SDK >=v3.1
            auto_exposure_gain:         true                                # Dynamic
            exposure:                   80                                  # Dynamic
            gain:                       80                                  # Dynamic
            auto_whitebalance:          true                                # Dynamic
            whitebalance_temperature:   42                                  # Dynamic - works only if `auto_whitebalance` is false
            qos_history:                0                                   # '0': KEEP_LAST - '1': KEEP_ALL
            qos_depth:                  1                                   # Queue size if using KEEP_LAST
            qos_reliability:            1                                   # '0': BEST_EFFORT - '1': RELIABLE
            qos_durability:             1                                   # '0': TRANSIENT_LOCAL - '1': VOLATILE

        depth:            
            quality:                    1                                   # '0': NONE, '1': PERFORMANCE, '2': QUALITY, '3': ULTRA
            sensing_mode:               0                                   # '0': STANDARD, '1': FILL
            depth_stabilization:        true
            openni_depth_mode:          false                               # 'false': 32bit float meters, 'true': 16bit uchar millimeters
            depth_downsample_factor:    1.0                                 # Dynamic - Resample factor for depth data matrices [0.01,1.0] The SDK works with native data sizes, but publishes rescaled matrices (depth map, point cloud, ...)
            point_cloud_freq:           15.0                                # Dynamic - frequency of the pointcloud publishing (equal or less to `grab_frame_rate` value)
            depth_confidence:           50                                  # Dynamic
            depth_texture_conf:         100                                 # Dynamic
            qos_history:                0                                   # '0': KEEP_LAST - '1': KEEP_ALL
            qos_depth:                  1                                   # Queue size if using KEEP_LAST
            qos_reliability:            1                                   # '0': BEST_EFFORT - '1': RELIABLE
            qos_durability:             1                                   # '0': TRANSIENT_LOCAL - '1': VOLATILE

        pos_tracking:
            publish_tf:                 true                                # publish `odom -> base_link` TF
            publish_map_tf:             true                                # publish `map -> odom` TF
            map_frame:                  'map'
            odometry_frame:             'odom'
            area_memory_db_path:        ''
            area_memory:                true                                # Enable to detect loop closure
            floor_alignment:            false                               # Enable to automatically calculate camera/floor offset
            initial_base_pose:          [0.0,0.0,0.0, 0.0,0.0,0.0]          # Initial position of the `base_frame` -> [X, Y, Z, R, P, Y]
            init_odom_with_first_valid_pose: true                           # Enable to initialize the odometry with the first valid pose
            path_pub_rate:              2.0                                 # Camera trajectory publishing frequency
            path_max_count:             -1                                  # use '-1' for unlimited path size
            two_d_mode:                 false                               # Force navigation on a plane. If true the Z value will be fixed to "fixed_z_value", roll and pitch to zero
            fixed_z_value:              0.00                                # Value to be used for Z coordinate if `two_d_mode` is true
            qos_history:                0                                   # '0': KEEP_LAST - '1': KEEP_ALL
            qos_depth:                  1                                   # Queue size if using KEEP_LAST
            qos_reliability:            1                                   # '0': BEST_EFFORT - '1': RELIABLE
            qos_durability:             1                                   # '0': TRANSIENT_LOCAL - '1': VOLATILE

        mapping:
            mapping_enabled:            false                               # True to enable mapping and fused point cloud pubblication
            resolution:                 0.05                                # maps resolution in meters [0.01f, 0.2f]
            max_mapping_range:          -1                                  # maximum depth range while mapping in meters (-1 for automatic calculation) [2.0, 20.0]
            fused_pointcloud_freq:      1.0                                 # frequency of the publishing of the fused colored point cloud
            qos_history:                0                                   # '0': KEEP_LAST - '1': KEEP_ALL
            qos_depth:                  1                                   # Queue size if using KEEP_LAST
            qos_reliability:            1                                   # '0': BEST_EFFORT - '1': RELIABLE
            qos_durability:             1                                   # '0': TRANSIENT_LOCAL - '1': VOLATILE

















